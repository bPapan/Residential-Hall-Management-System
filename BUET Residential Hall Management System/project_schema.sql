--Schema of hall management system

--Table name : HALL
-- H_TYPE designates gender for hall
CREATE TABLE HALL
(
	H_ID 				NUMBER(2) NOT NULL ,
	H_NAME  		VARCHAR2(25) NOT NULL UNIQUE ,
	H_TYPE    		VARCHAR2(8) NOT NULL ,
	H_CAPACITY  	NUMBER(4) NOT NULL ,
	CONSTRAINT hall_pk PRIMARY KEY(H_ID) ,
	CONSTRAINT h_type_chk check( upper(H_TYPE) IN ('MALE' , 'FEMALE') )
) ;

--Table name: STUDENTS
-- S_STATUS designates current or alumni students
CREATE TABLE STUDENTS
(
	S_ID				CHAR(10) NOT NULL ,
	S_NAME			VARCHAR2(25) NOT NULL, 
	S_FATHER		VARCHAR2(25) NOT NULL ,
	S_MOTHER 		VARCHAR2(25) NOT NULL ,
	S_GENDER		VARCHAR2(8) NOT NULL ,
	S_RELIGION	VARCHAR2(8) NOT NULL ,
	S_MOBILE		VARCHAR2(15)	NOT NULL,
	S_BLD_GRP		VARCHAR2(3) NOT NULL,
	S_PRM_ADDR	VARCHAR2(50) NOT NULL ,
	S_STATUS 		VARCHAR2(8) NOT NULL,
	CONSTRAINT STUDENTS_pk PRIMARY KEY(S_ID) ,
	CONSTRAINT S_GENDER_chk check( upper(S_GENDER) IN ('MALE' , 'FEMALE') ) ,
	CONSTRAINT S_STATUS_chk check( upper(S_STATUS) IN ('RUNNING' , 'ALUMNI') )
) ;

--Table name: TEACHERS
-- T_DESIG designates teachers post

CREATE TABLE TEACHERS
(
	T_ID				CHAR(10) NOT NULL ,
	T_NAME			VARCHAR2(25) NOT NULL, 
	T_DESIG			VARCHAR2(20) NOT NULL,
	CONSTRAINT	TEACHERS_pk	PRIMARY KEY(T_ID) 
) ;

--Table name: STAFFS

CREATE TABLE STAFFS
(
	H_ID 				NUMBER(2) NOT NULL ,
	ST_ID				VARCHAR2(10) NOT NULL,
	ST_WING			VARCHAR2(6) ,
	ST_NAME			VARCHAR2(25) NOT NULL ,
	ST_AGE			NUMBER(2) NOT NULL,
	ST_JOB_ID		VARCHAR2(15) NOT NULL,
	ST_H_DATE		DATE	NOT NULL ,
	ST_E_DATE		DATE ,
	ST_SALARY		NUMBER(5),
	CONSTRAINT  STAFFS_pk PRIMARY KEY(H_ID,ST_ID) ,
	CONSTRAINT STAFFS_fk FOREIGN KEY(H_ID)
		REFERENCES HALL ,
	CONSTRAINT 	history_chk check( ST_H_DATE < ST_E_DATE)
) ;

--Table name: FEES
--F_CATEGORY designates whether fee is for resident or for all 
CREATE TABLE FEES
(
	F_ID				NUMBER(3) NOT NULL,
	F_NAME			VARCHAR2(15) NOT NULL,
	F_AMNT			NUMBER(5) NOT NULL,
	F_CATEGORY	VARCHAR2(10) NOT NULL,
	CONSTRAINT	FEES_pk	PRIMARY KEY(F_ID) ,
	CONSTRAINT  F_AMNT_chk	check(F_AMNT > 0 ) ,
	CONSTRAINT	F_CATEGORY	check ( upper(F_CATEGORY) IN ( 'ALL' , 'RESIDENT' ))
) ;


--Table name: EVENTS

CREATE TABLE EVENTS
(
	E_ID				NUMBER(3) NOT NULL ,
	E_NAME			VARCHAR2(20) NOT NULL,
	CONSTRAINT	EVENTS_pk PRIMARY KEY(E_ID)
) ;

--Table name: SPONSORS

CREATE TABLE SPONSORS
(
	SP_ID				NUMBER(3) NOT NULL ,
	SP_NAME			VARCHAR2(20) NOT NULL,
	SP_MANAGER	VARCHAR2(20) ,
	SP_CONTACT	VARCHAR2(20) ,
	CONSTRAINT	SPONSORS_pk PRIMARY KEY(SP_ID)
) ;

--Table name: MATCHES

CREATE TABLE  MATCHES
(
	M_ID				NUMBER(4)	NOT NULL,
	M_TOURN		VARCHAR2(15) NOT NULL ,
	M_ROUND		VARCHAR2(10) NOT NULL ,
	M_DATE			DATE	NOT NULL,
	CONSTRAINT 	MATCHES_pk PRIMARY KEY(M_ID)
) ;

--Table name: SPONSORSHIP
--	SPON_CMNT designates the sponsors contribution
	
CREATE TABLE SPONSORSHIP
(
	SP_ID				NUMBER(3) NOT NULL ,
	E_ID				NUMBER(3) NOT NULL ,
	SPON_AMNT	NUMBER(6),
	SPON_CMNT	VARCHAR2(50) NOT NULL,
	CONSTRAINT  SPONSORSHIP_pk PRIMARY KEY(SP_ID, E_ID) ,
	CONSTRAINT  SPONSORSHIP_fk1 FOREIGN KEY (SP_ID)
		REFERENCES SPONSORS(SP_ID) ,
	CONSTRAINT  SPONSORSHIP_fk2 FOREIGN KEY (E_ID)
		REFERENCES EVENTS(E_ID) 
) ;

--Table name: TEAMS

CREATE TABLE TEAMS
(
	TEAM_ID			NUMBER(3) NOT NULL ,
	H_ID 				NUMBER(2) NOT NULL ,
	TEAM_SPORT	VARCHAR2(15) NOT NULL,
	CONSTRAINT  TEAMS_pk PRIMARY KEY(TEAM_ID) ,
	CONSTRAINT  TEAMS_fk1 FOREIGN KEY (H_ID)
		REFERENCES HALL(H_ID)
) ;
	

--Table name : TEAM_MEMBER

CREATE TABLE TEAM_MEMBER
(
	TEAM_ID			NUMBER(3) NOT NULL ,	
	S_ID				CHAR(10) NOT NULL ,
	T_MEM_ROLE	VARCHAR2(15) NOT NULL,
	CONSTRAINT  TEAM_MEMBER_pk PRIMARY KEY(TEAM_ID, S_ID) ,
	CONSTRAINT  TEAM_MEMBER_fk1 FOREIGN KEY (TEAM_ID)
		REFERENCES TEAMS(TEAM_ID) ,
	CONSTRAINT  TEAM_MEMBER_fk2 FOREIGN KEY (S_ID)
		REFERENCES STUDENTS(S_ID) ,
	CONSTRAINT 	MEMBER_ROLE_chk	 check(upper(T_MEM_ROLE) IN ('TEAM PLAYER' , 'CAPTAIN','SINGLE' , 'WITH PARTNER'))
) ;

--Table name: ASSIGNED_HALL
--	ASSINED_S_TYPE designates whether the student is resident or attached

CREATE TABLE ASSIGNED_HALL
(
	H_ID 							NUMBER(2) NOT NULL ,
	S_ID							CHAR(10) NOT NULL ,
	ASSIGNED_S_TYPE		CHAR(8) NOT NULL ,
	CONSTRAINT  ASSIGNED_HALL_pk PRIMARY KEY(S_ID, H_ID) ,
	CONSTRAINT  ASSIGNED_HALL_fk1 FOREIGN KEY (H_ID)
		REFERENCES HALL(H_ID) ,
	CONSTRAINT  ASSIGNED_HALL_fk2 FOREIGN KEY (S_ID)
		REFERENCES STUDENTS(S_ID) ,
	CONSTRAINT 	STUDENT_TYPE_chk	check(upper(ASSIGNED_S_TYPE) IN ('RESIDENT' , 'ATTACHED'))
) ;

--Table name: PARTICIPATION
CREATE TABLE PARTICIPATION
(
	S_ID							CHAR(10) NOT NULL ,
	E_ID							NUMBER(3) NOT NULL ,
	E_ROLE						VARCHAR2(10) NOT NULL,
	CONSTRAINT PARTICIPATION_pk PRIMARY KEY(S_ID,E_ID) ,
	CONSTRAINT  PARTICIPATION_fk1 FOREIGN KEY (S_ID)
		REFERENCES STUDENTS(S_ID) ,
	CONSTRAINT  PARTICIPATION_fk2 FOREIGN KEY (E_ID)
		REFERENCES EVENTS(E_ID) 
) ;

--Table name: MATCH_INFO
CREATE TABLE MATCH_INFO
(
	TEAM_ID							NUMBER(3) NOT NULL ,	
	M_ID								NUMBER(4)	NOT NULL,
	M_INFO_RESULT			VARCHAR2(10) NOT NULL,
	M_INFO_WINNER			NUMBER(3) ,
	CONSTRAINT MATCH_INFO_pk PRIMARY KEY(TEAM_ID, M_ID) ,
	CONSTRAINT MATCH_INFO_fk1 FOREIGN KEY(TEAM_ID)
		REFERENCES TEAMS(TEAM_ID) ,
	CONSTRAINT MATCH_INFO_fk2 FOREIGN KEY(M_ID)
		REFERENCES MATCHES(M_ID) ,
	CONSTRAINT 	MATCH_RESULT_chk	check(upper(M_INFO_RESULT) IN ('DRAW' , 'ABANDONED' ,'RESULTED'))
) ;

--Table name: EVENT_INFO
CREATE TABLE EVENT_INFO
(
		E_ID							NUMBER(3) NOT NULL ,
		H_ID 							NUMBER(2) NOT NULL ,
		E_INFO_SDATE			DATE NOT NULL,
		E_INFO_EDATE			DATE NOT NULL,
		CONSTRAINT EVENT_INFO_pk PRIMARY KEY( E_ID ,H_ID) ,
		CONSTRAINT EVENT_INFO_fk1 FOREIGN KEY(E_ID)
		REFERENCES EVENTS(E_ID) ,
		CONSTRAINT EVENT_INFO_fk2 FOREIGN KEY(H_ID)
		REFERENCES HALL(H_ID) ,
		CONSTRAINT 	EVENT_INFO_HISTORY_chk check( E_INFO_SDATE <= E_INFO_EDATE)
) ;

--Table name: DESIGNATED_HALL
--DES_ADMIN_ROLE DESIGNATES WHETHER THE TEACHER IS PROVOST OR ASSITANT PROVOST
CREATE TABLE DESIGNATED_HALL
(
	H_ID 							NUMBER(2) NOT NULL ,
	T_ID							CHAR(10) NOT NULL ,
	DES_ADMIN_ROLE		VARCHAR2(15) NOT NULL ,
	DES_ADMIN_SDATE	DATE NOT NULL,
	DES_ADMIN_RDATE 	DATE ,
	CONSTRAINT DESIGNATED_HALL_pk PRIMARY KEY( T_ID, H_ID) ,
	CONSTRAINT DESIGNATED_HALL_fk1 FOREIGN KEY(H_ID)
		REFERENCES HALL(H_ID) ,
	CONSTRAINT DESIGNATED_HALL_fk2 FOREIGN KEY(T_ID)
		REFERENCES TEACHERS(T_ID) ,
	CONSTRAINT 	DESIGNATED_HALL_ROLE_chk 	check(upper(DES_ADMIN_ROLE) IN ('PROVOST' , 'ASST. PROVOST')) ,
	CONSTRAINT 	DESIGNATED_HALL_HISTORY_chk check( DES_ADMIN_SDATE <= DES_ADMIN_RDATE)
) ;

--Table name :ROOMS
--possible data for R_WING: EXTENSION,NORTH, WEST...
CREATE TABLE ROOMS
(
	R_ID							VARCHAR2(4)  NOT NULL, 
	H_ID 							NUMBER(2) NOT NULL ,
	R_CAPACITY					NUMBER(2) NOT NULL ,
	R_WING						VARCHAR2(8) ,
	CONSTRAINT ROOMS_pk PRIMARY KEY(R_ID,H_ID) ,
	CONSTRAINT ROOMS_fk FOREIGN KEY(H_ID)
		REFERENCES HALL(H_ID)
) ;

--Table name: ASSIGNED_ROOM
CREATE TABLE ASSIGNED_ROOM
(
	ASS_ROOM_SID			NUMBER(6)  NOT NULL,
	S_ID							CHAR(10) NOT NULL ,
	ASS_HALL_H_ID 		NUMBER(2) NOT NULL ,
	R_H_ID						NUMBER(2) NOT NULL,
	R_ID							VARCHAR2(4)  NOT NULL, 
	ASS_ROOM_SDATE		DATE	NOT NULL,
	ASS_ROOM_EDATE		DATE,
	CONSTRAINT ASSIGNED_ROOM_pk PRIMARY KEY (ASS_ROOM_SID) ,
	CONSTRAINT ASSIGNED_ROOM_fk1 FOREIGN KEY(S_ID,ASS_HALL_H_ID)
		REFERENCES ASSIGNED_HALL(S_ID,H_ID) ,
	CONSTRAINT ASSIGNED_ROOM_fk2 FOREIGN KEY(R_ID,R_H_ID)
		REFERENCES ROOMS(R_ID,H_ID) ,
	CONSTRAINT 	ASSIGNED_ROOM_HISTORY_chk check( ASS_ROOM_SDATE <= ASS_ROOM_EDATE) ,
	CONSTRAINT ASSIGNED_ROOM_HALL_chk check( ASS_HALL_H_ID = R_H_ID )
) ;


--Table name: STUDENTS_FEES
CREATE TABLE STUDENTS_FEES
(
		ST_FEE_MEMO_ID		NUMBER(8) NOT NULL ,
		S_ID							CHAR(10) NOT NULL ,
		H_ID 							NUMBER(2) NOT NULL ,							
		F_ID							NUMBER(3) NOT NULL,
		S_F_MONTH				VARCHAR2(10) NOT NULL,
		S_F_YEAR					CHAR(4) NOT NULL ,
		S_F_LDATE					DATE  NOT NULL ,
		S_F_PDATE					DATE ,
		CONSTRAINT STUDENTS_FEES PRIMARY KEY(ST_FEE_MEMO_ID) ,
		CONSTRAINT STUDENTS_FEES_fk1 FOREIGN KEY(S_ID,H_ID)
			REFERENCES ASSIGNED_HALL(S_ID,H_ID) ,
		CONSTRAINT STUDENTS_FEES_fk2 FOREIGN KEY(F_ID)
			REFERENCES FEES(F_ID) 
) ;

GRANT SELECT ON HALL to PUBLIC;
GRANT SELECT ON STUDENTS to PUBLIC;
GRANT SELECT ON TEACHERS to PUBLIC;
GRANT SELECT ON STAFFS to PUBLIC;
GRANT SELECT ON FEES to PUBLIC;
GRANT SELECT ON EVENTS to PUBLIC;
GRANT SELECT ON SPONSORS to PUBLIC;
GRANT SELECT ON MATCHES to PUBLIC;
GRANT SELECT ON SPONSORSHIP to PUBLIC;
GRANT SELECT ON TEAMS to PUBLIC;
GRANT SELECT ON TEAM_MEMBER to PUBLIC;
GRANT SELECT ON ASSIGNED_HALL to PUBLIC;
GRANT SELECT ON PARTICIPATION to PUBLIC;
GRANT SELECT ON MATCH_INFO to PUBLIC;
GRANT SELECT ON EVENT_INFO to PUBLIC;
GRANT SELECT ON DESIGNATED_HALL to PUBLIC;
GRANT SELECT ON ROOMS to PUBLIC;
GRANT SELECT ON ASSIGNED_ROOM to PUBLIC;
GRANT SELECT ON STUDENTS_FEES to PUBLIC;



	